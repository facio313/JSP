<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.board.dao.BoardDAO">

	<sql id="searchFrag">
	    <where>
	    	<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
	    		<choose>
	    			<when test="simpleCondition.searchType eq 'writer'">
	    				INSTR(BO_WRITER, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<when test="simpleCondition.searchType eq 'content'">
	    				INSTR(BO_CONTENT, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<otherwise>
	    				INSTR(BO_WRITER, #{simpleCondition.searchWord}) > 0
	    				OR
	    				INSTR(BO_CONTENT, #{simpleCondition.searchWord}) > 0
	    			</otherwise>
	    		</choose>
	    	</if>
	    </where>
	</sql>


	<select id="selectTotalRecord" resultType="int" parameterType="PagingVO">
		SELECT COUNT(*)
		FROM PRODVIEW
		<include refid="searchFrag"/>
	</select>
	
	<select id="selectBoardList" resultType="BoardVO" parameterType="PagingVO">
		WITH ORDEREDBOARD AS (
		    SELECT BO_NO, BO_TITLE, BO_WRITER, BO_MAIL, BO_DATE, BO_HIT
		            ,(
		                SELECT COUNT(ATT_NO)
		                FROM ATTACH
		                WHERE ATTACH.BO_NO = FREEBOARD.BO_NO
		            ) ATT_COUNT
		    FROM FREEBOARD
			<include refid="searchFrag"/>
		    ORDER BY BO_NO DESC
		)
		SELECT A.*
		FROM (
		    SELECT ROWNUM RNUM, ORDEREDBOARD.*
		    FROM ORDEREDBOARD
		) A 
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<resultMap type="BoardVO" id="boardMap" autoMapping="true">
		<id property="boNo" column="BOARD_NO"/>  <!-- bo_no가 겹치므로 attach가 없더라도 AttachVO가 하나 생겨서 누수가 발생 => Alias를 주면 됨! -->
		<collection property="attachList" ofType="AttachVO" autoMapping="true" />
	</resultMap>
	
	<select id="selectBoard" resultMap="boardMap" parameterType="int"> <!-- 커서가 여러 개가 나올 수 있기 때문에 BoardVO 하나로 받을 수 없음. Has many 관계를 설정해줄 수 있는 resultMap을 써야 함 -->
		SELECT
		    A.bo_no BOARD_NO,
		    A.bo_title,
		    A.bo_writer,
		    A.bo_ip,
		    A.bo_mail,
		    A.bo_pass,
		    A.bo_content,
		    A.bo_date,
		    A.bo_hit,
		    B.att_no,
		    B.bo_no,
		    B.att_filename,
		    B.att_savename,
		    B.att_mime,
		    B.att_filesize,
		    B.att_fancysize,
		    B.att_download
		FROM FREEBOARD A LEFT OUTER JOIN ATTACH B ON (A.BO_NO = B.BO_NO)
		WHERE A.BO_NO = #{boNo}
	</select>
	
	<update id="incrementHit" parameterType="int">
		UPDATE FREEBOARD
		SET BO_HIT = BO_HIT + 1
		WHERE BO_NO = #{boNo}
	</update>
	
	<insert id="insertBoard" parameterType="BoardVO">
		<selectKey order="BEFORE" resultType="int" keyProperty="boNo">
			SELECT FREEBOARD_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		INSERT INTO freeboard (
		    bo_no,
		    bo_title,
		    bo_writer,
		    bo_ip,
		    bo_mail,
		    bo_pass,
		    bo_content
		) VALUES (
		    #{boNo, jdbcType=NUMERIC}
		    , #{boTitle,jdbcType=VARCHAR}
		    , #{boWriter,jdbcType=VARCHAR}
		    , #{boIp,jdbcType=VARCHAR}
		    , #{boMail,jdbcType=VARCHAR}
		    , #{boPass,jdbcType=VARCHAR}
		    , #{boContent,jdbcType=CLOB}
		)
	</insert>
	
	<update id="updateBoard" parameterType="BoardVO">
		UPDATE FREEBOARD
		SET
			BO_TITLE = #{boTitle,jdbcType=VARCHAR}
			, BO_WRITER = #{boWriter,jdbcType=VARCHAR}
			, BO_MAIL = #{boMail,jdbcType=VARCHAR}
			, BO_CONTENT = #{boContent,jdbcType=CLOB}
		WHERE BO_NO = #{boNo,jdbcType=NUMERIC}
	</update>
	
</mapper>