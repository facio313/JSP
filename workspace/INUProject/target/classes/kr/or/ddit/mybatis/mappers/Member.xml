<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.MemberDAO">
<!--  [[개정이력(Modification Information)]]       -->
<!--  수정일                수정자     수정내용               -->
<!--  ==========   ======    ==============        -->
<!--  2023. 2. 7.   박형준     최초작성               -->
<!--  2023. 2. 10.  양서연     selectMember 수정               -->
<!--  Copyright (c) 2023 by DDIT All right reserved -->	

	<resultMap type="memberVO" id="MemberMap">
		<result property="memId" column="MEM_ID" /> 
		<result property="memPass" column="MEM_PASS" /> 
		<result property="memName" column="MEM_NAME" /> 
		<result property="memDelete" column="MEM_DELETE" /> 
		<result property="memUse" column="MEM_USE" /> 
		<result property="memAuthCd" column="MEM_AUTH_CD" /> 
		<result property="memJoinDate" column="MEM_JOINDATE" /> 
		<association property="incruiterVO" resultMap="incruiterMap"></association>
		<association property="seekerVO" resultMap="seekerMap"></association>
		<association property="expertVO" resultMap="expertMap"></association>
	</resultMap>
	<resultMap type="incruiterVO" id="incruiterMap">
		<result property="cmpId" column="CMP_ID"/>
		<result property="incruiterEmail" column="INCRUITER_EMAIL"/>
		<result property="memTel" column="MEM_TEL"/>
		<result property="memApproval" column="MEM_APPROVAL"/>
		<result property="memDate" column="MEM_DATE"/>
		<result property="memDelete" column="MEM_DELETE"/>
	</resultMap>
	<resultMap type="seekerVO" id="seekerMap">
		<result property="memNickname" column="MEM_NICKNAME"/>
		<result property="memBirth" column="MEM_BIRTH"/>
		<result property="memGender" column="MEM_GENDER"/>
		<result property="memZip" column="MEM_ZIP"/>
		<result property="memAddr1" column="MEM_ADDR1"/>
		<result property="memAddr2" column="MEM_ADDR2"/>
		<result property="memEmail" column="MEM_EMAIL"/>
		<result property="memTel" column="MEM_TEL"/>
		<result property="memCertification" column="MEM_CERTIFICATION"/>
		<result property="memCarttotal" column="MEM_CARTTOTAL"/>
		<result property="memScore" column="MEM_SCORE"/>
	</resultMap>
	<resultMap type="expertVO" id="expertMap">
		<result property="expertApproval" column="EXPERT_APPROVAL"/>
		<result property="expertApprovalDate" column="EXPERT_APPROVAL_DATE"/>
		<result property="expertIntroduction" column="EXPERT_INTRODUCTION"/>
		<result property="expertJoinpath" column="EXPERT_JOINPATH"/>
		<result property="expertField" column="EXPERT_FIELD"/>
		<result property="expertTag" column="EXPERT_TAG"/>
		<result property="expertZip" column="EXPERT_ZIP"/>
		<result property="expertAddr" column="EXPERT_ADDR"/>
		<result property="expertAddr2" column="EXPERT_ADDR2"/>
		<result property="expertTel" column="EXPERT_TEL"/>
		<result property="expertEmail" column="EXPERT_EMAIL"/>
		<result property="expertBank" column="EXPERT_BANK"/>
		<result property="expertAccount" column="EXPERT_ACCOUNT"/>
		<result property="expertHolder" column="EXPERT_HOLDER"/>
		<result property="exfieldId" column="EXFIELD_ID"/>
		<result property="exjobId" column="EXJOB_ID"/>
	</resultMap>
	<select id="selectMember" parameterType="string" resultMap="MemberMap">
		SELECT A.MEM_ID, A.MEM_PASS, A.MEM_NAME, A.MEM_DELETE, A.MEM_USE, A.MEM_AUTH_CD, A.MEM_JOINDATE
		     , B.CMP_ID, B.MEM_EMAIL AS INCRUITER_EMAIL, B.MEM_TEL, B.MEM_APPROVAL, B.MEM_DATE, B.MEM_DELETE
		     , C.MEM_NICKNAME, C.MEM_BIRTH, C.MEM_GENDER, C.MEM_ZIP, C.MEM_ADDR1, C.MEM_ADDR2, C.MEM_EMAIL, C.MEM_TEL, C.MEM_CERTIFICATION, C.MEM_CARTTOTAL, C.MEM_SCORE
		     , E.EXPERT_APPROVAL, E.EXPERT_APPROVAL_DATE, E.EXPERT_INTRODUCTION, E.EXPERT_JOINPATH, E.EXPERT_FIELD, E.EXPERT_TAG, E.EXPERT_ZIP, E.EXPERT_ADDR, E.EXPERT_ADDR2
		        , E.EXPERT_TEL, E.EXPERT_EMAIL, E.EXPERT_BANK, E.EXPERT_ACCOUNT, E.EXPERT_HOLDER, E.EXFIELD_ID, E.EXJOB_ID
		FROM (SELECT * FROM MEMBER WHERE MEM_ID = #{memId}) A LEFT OUTER JOIN INCRUITER B ON(A.MEM_ID = B.MEM_ID)
		              LEFT OUTER JOIN SEEKER C ON(A.MEM_ID = C.MEM_ID)
		              LEFT OUTER JOIN EXPERT E ON(A.MEM_ID = E.MEM_ID)
	</select>
	<insert id="insertMember" parameterType="SeekerVO">
		INSERT INTO member (
	    mem_id,
	    mem_pass,
	    mem_name,
	    mem_use,
	    mem_auth_cd
		) VALUES (
		 #{memId,jdbcType=VARCHAR}
		, #{memPass,jdbcType=VARCHAR}
		, #{memName,jdbcType=VARCHAR}
		, 'Y'
		, 'ROLE_SEEKER'
		)
	</insert>
	
	<insert id="insertMemberIN" parameterType="SeekerVO">
		INSERT INTO member (
	    mem_id,
	    mem_pass,
	    mem_name,
	    mem_use,
	    mem_auth_cd
		) VALUES (
		 #{memId,jdbcType=VARCHAR}
		, #{memPass,jdbcType=VARCHAR}
		, #{memName,jdbcType=VARCHAR}
		, 'Y'
		, 'ROLE_INCRUITER'
		)
	</insert>
	
	
	<insert id="insertSeeker" parameterType="SeekerVO">
		INSERT INTO seeker (
	    mem_id,
	    mem_nickname,
	    mem_birth,
	    mem_gender,
	    mem_zip,
	    mem_addr1,
	    mem_addr2,
	    mem_email,
	    mem_tel
<!--     mem_certification, 추가해야함 -->
		) VALUES (
		 #{memId,jdbcType=VARCHAR}
		, #{memNickname,jdbcType=VARCHAR}
		, #{memBirth,jdbcType=DATE}
		, #{memGender,jdbcType=VARCHAR}
		, #{memZip,jdbcType=VARCHAR}
		, #{memAddr1,jdbcType=VARCHAR}
		, #{memAddr2,jdbcType=VARCHAR}
		, #{memEmail,jdbcType=VARCHAR}
		, #{memTel,jdbcType=VARCHAR}
<!-- 	, #{memCertification,jdbcType=VARCHAR} -->
		)
	</insert>
	<insert id="insertIncruiter" parameterType="IncruiterVO">
		INSERT INTO incruiter (
		    mem_id,
		    cmp_id,
		    mem_email,
		    mem_tel
		) VALUES (
		 #{memId,jdbcType=VARCHAR}
		, #{cmpId,jdbcType=VARCHAR}
		, #{memEmail,jdbcType=VARCHAR}
		, #{memTel,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- ====================================== 시스템 관리 부분 ===================================== -->
	<resultMap type="MemberVO" id="listMap" autoMapping="true">
		<id property="memId" column="MEM_ID"/>
		<association property="cutVO" javaType="CutVO" autoMapping="true"/>
		<association property="blackVO" javaType="BlackVO" autoMapping="true"/>
		<association property="seekerVO" javaType="SeekerVO" autoMapping="true"/>
		<association property="incruiterVO" javaType="IncruiterVO" autoMapping="true"/>		
		<association property="expertVO" javaType="ExpertVO" autoMapping="true"/>		
		<association property="companyVO" javaType="CompanyVO" autoMapping="true"/>	
	</resultMap>
	
	<!-- 권한별 회원 목록 -->
	<select id="selectAuthMemberList" parameterType="MemberVO" resultMap="listMap">
		WITH ORDEREDMEMBER AS (
		    SELECT A.MEM_ID
               , A.MEM_NAME
               , A.MEM_USE
               , A.MEM_AUTH_CD
               , A.MEM_JOINDATE
               , B.CUT_DATE 
               , C.BLACKLIST_DATE 
               , A.MEM_DELETE		           
		    FROM MEMBER A
            LEFT OUTER JOIN CUT B ON(A.MEM_ID = B.MEM_ID)
            LEFT OUTER JOIN BLACKLIST C ON(A.MEM_ID = C.MEM_ID)
            WHERE MEM_AUTH_CD = #{memAuthCd}
		    ORDER BY MEM_NAME
		)
		SELECT A.*
		FROM (
		    SELECT ROWNUM RNUM, ORDEREDMEMBER.*
		    FROM ORDEREDMEMBER
		) A
	</select>
	
	<!-- 차단 회원 목록 -->
	<select id="selectCutList" resultMap="listMap">
		WITH ORDEREDMEMBER AS (
		    SELECT A.MEM_ID
               , A.MEM_NAME
               , A.MEM_AUTH_CD
               , A.MEM_JOINDATE
               , B.CUT_SN
               , B.CUT_DATE 
               , B.CUT_CHECK
		    FROM MEMBER A
            LEFT OUTER JOIN CUT B ON(A.MEM_ID = B.MEM_ID)
            WHERE B.CUT_DATE IS NOT NULL
		    ORDER BY MEM_NAME
		)
		SELECT A.*
		FROM (
		    SELECT ROWNUM RNUM, ORDEREDMEMBER.*
		    FROM ORDEREDMEMBER
		) A 
	</select>
	
	<!-- 블랙 회원 목록 -->
	<select id="selectBlackList" resultMap="listMap">
		WITH ORDEREDMEMBER AS (
		    SELECT A.MEM_ID
               , A.MEM_NAME
               , A.MEM_AUTH_CD
               , A.MEM_JOINDATE
               , B.BLACKLIST_SN
               , B.BLACKLIST_DATE 
               , B.BLACKLIST_CHECK
		    FROM MEMBER A
            LEFT OUTER JOIN BLACKLIST B ON(A.MEM_ID = B.MEM_ID)
            WHERE B.BLACKLIST_DATE IS NOT NULL
		    ORDER BY MEM_NAME
		)
		SELECT A.*
		FROM (
		    SELECT ROWNUM RNUM, ORDEREDMEMBER.*
		    FROM ORDEREDMEMBER
		) A
	</select>
	
	<!-- 총괄 기업회원 목록 -->
	<select id="selectIncruiterList" resultMap="listMap">
		SELECT A.MEM_ID
       			, A.MEM_NAME
       			, A.MEM_AUTH_CD
		       	, A.MEM_JOINDATE
		       	, B.CMP_ID
		       	, B.MEM_EMAIL
		       	, B.MEM_TEL
		       	, B.MEM_APPROVAL
		       	, B.MEM_DATE
  		FROM MEMBER A
  		INNER JOIN INCRUITER B ON (A.MEM_ID = B.MEM_ID)
 		WHERE MEM_AUTH_CD = 'ROLE_INCRUITER3'
   		AND MEM_APPROVAL = 'N'
	</select>
	
	<!-- 총괄 기업회원 세부 -->
	<select id="selectIncruiter" parameterType="string" resultMap="listMap">
		SELECT
		    mem_id, mem_pass, mem_name,
		    mem_delete, mem_use, cmp_id,
		    mem_email, mem_tel, mem_auth_cd,
		    mem_approval, mem_date, cmp_no,
		    cmp_name, cmp_rep_name, cmp_bsns_no,
		    cmp_addr1, cmp_addr2, cmp_zip,
		    cmp_phone, cmp_email, cmp_url,
		    cmp_estbl_date, cmp_smenp, cmp_emp_no,
		    cmp_avr_work, cmp_avr_salary, cmp_mb_name,
		    cmp_check, cmp_content, cmp_logo, att_id
		FROM
		    mem_incruiter
		WHERE MEM_ID=#{memId}
	</select>
	
	<!-- 총괄 승인 -->
	<update id="updateAcceptInc" parameterType="IncruiterVO">
		UPDATE INCRUITER 
   		SET MEM_APPROVAL = 'Y'
 		WHERE CMP_ID = #{cmpId}
	</update>
	<!-- 회사 승인 -->
	<update id="updateAcceptCmp" parameterType="IncruiterVO">
		UPDATE COMPANY
		SET CMP_CHECK = 'Y'
		WHERE CMP_ID = #{cmpId}
	</update>
	
	<!-- 총괄 신청 삭제 -->
	<delete id="deleteAppliInc" parameterType="MemberVO">
		DELETE FROM MEMBER
		WHERE MEM_ID = #{memId}
	</delete>
	
	
	<!-- 전문가 신청 리스트 -->
	<select id="selectExpertList" resultMap="listMap">
		SELECT A.MEM_ID
		       , A.MEM_NAME
		       , A.MEM_AUTH_CD
		       , B.EXPERT_APPROVAL
		       , B.EXPERT_FIELD
		FROM MEMBER A
		INNER JOIN EXPERT B ON (A.MEM_ID = B.MEM_ID)
		WHERE B.EXPERT_APPROVAL = 'N'
	</select>
	
	<!-- 전문가 신청 세부 -->
	<select id="selectExpert" resultMap="listMap">
		SELECT MEM_ID, MEM_NAME
		   , MEM_BIRTH, MEM_GENDER, MEM_ZIP
		   , MEM_ADDR1, MEM_ADDR2, MEM_EMAIL
		   , MEM_TEL, MEM_JOINDATE, MEM_AUTH_CD
		   , EXPERT_INTRODUCTION, EXPERT_JOINPATH
		   , EXPERT_FIELD, EXPERT_TAG, EXPERT_ZIP
		   , EXPERT_ADDR, EXPERT_ADDR2
		   , EXPERT_BANK, EXPERT_ACCOUNT
		   , EXPERT_HOLDER, EXFIELD_ID, EXJOB_ID 
		FROM MEM_EXPERT
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 전문가 승인 -->
	<update id="updateAcceptExpRole" parameterType="MemberVO">
		UPDATE MEMBER 
		SET MEM_AUTH_CD = 'ROLE_EXPERT'
 		WHERE MEM_ID = #{memId}
	</update>
	<update id="updateAcceptExp" parameterType="MemberVO">
		UPDATE EXPERT
   		SET EXPERT_APPROVAL = 'Y',
       	EXPERT_APPROVAL_DATE = SYSDATE
 		WHERE MEM_ID = #{memId}
	</update>
	
	<!-- ===========================아이디, 비번 찾기 부분 ================================ -->
	<!-- 일반회원 아이디 찾기 -->
	<select id="seekerFindId" parameterType="SeekerVO" resultType="SeekerVO">
		SELECT A.MEM_ID
		FROM MEMBER A
		INNER JOIN SEEKER B ON (A.MEM_ID = B.MEM_ID)
		WHERE A.MEM_NAME = #{memName}
		AND B.MEM_EMAIL = #{memEmail}
	</select>
	<!-- 기업회원 아이디 찾기 -->
	<select id="incruiterFindId" parameterType="IncruiterVO" resultType="MemberVO">
		SELECT A.MEM_ID
		FROM MEMBER A
		INNER JOIN INCRUITER B ON (A.MEM_ID = B.MEM_ID)
		INNER JOIN COMPANY C ON (B.CMP_ID = C.CMP_ID)
		WHERE A.MEM_NAME=#{memName}
		AND B.MEM_APPROVAL = 'Y'
		AND C.CMP_BSNS_NO=#{cmpBsnsNo}
	</select>
	<!-- 비밀번호를 찾기위한 일반회원 존재여부 -->
	<select id="getSeekerFindResult" parameterType="SeekerVO" resultType="int">
		SELECT count(*) 
		FROM MEMBER A
		INNER JOIN SEEKER B ON (A.MEM_ID = B.MEM_ID)
		WHERE A.MEM_ID = #{memId}
		AND A.MEM_NAME = #{memName}
		AND B.MEM_EMAIL = #{memEmail}
	</select>
	<!-- 비밀번호를 찾기위한 기업회원 존재여부 -->
	<select id="getIncruiterFindResult" parameterType="IncruiterVO" resultType="int">
		SELECT count(*)
		FROM MEMBER A
		INNER JOIN INCRUITER B ON (A.MEM_ID = B.MEM_ID)
		WHERE A.MEM_ID = #{memId}
		AND A.MEM_NAME = #{memName}
		AND B.MEM_EMAIL = #{memEmail}
	</select>
	<!-- 비밀번호 수정 -->
	<update id="updatePw" parameterType="MemberVO">
		UPDATE MEMBER
		SET MEM_PASS = #{memPass}
		WHERE MEM_ID = #{memId}
	</update>
	<!-- =============================================================================== -->
	<select id="selectSeeker" parameterType="String" resultType="SeekerVO">
		SELECT
		    mem_id,
		    mem_pass,
		    mem_name,
		    mem_delete,
		    mem_use,
		    mem_auth_cd,
		    mem_nickname,
		    mem_birth,
		    mem_gender,
		    mem_zip,
		    mem_addr1,
		    mem_addr2,
		    mem_email,
		    mem_tel,
		    mem_certification,
		    mem_carttotal,
		    mem_score,
		    mem_joindate
		FROM
		    mem_seeker
		WHERE
		    MEM_ID = #{memId}
	</select>
</mapper>

















