<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.expert.dao.ExprodDAO">
 	<sql id="mainSearch">
		<where>
			<if test="simpleCondition neq null">
			<choose>
				<when test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchField) and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchValue) and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
					and exfield_id = #{simpleCondition.searchField,jdbcType=VARCHAR}
					and exjob_id = #{simpleCondition.searchValue,jdbcType=VARCHAR}
					and INSTR(EXPROD_NAME, #{simpleCondition.searchWord,jdbcType=VARCHAR})>0
				</when>
				<when test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchField) and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchValue) and @org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchWord)">
					and exfield_id = #{simpleCondition.searchField,jdbcType=VARCHAR}
					and exjob_id = #{simpleCondition.searchValue,jdbcType=VARCHAR}
				</when>
				<when test="@org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchField) and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchValue) and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
					and exjob_id = #{simpleCondition.searchValue,jdbcType=VARCHAR}
					and INSTR(EXPROD_NAME, #{simpleCondition.searchWord,jdbcType=VARCHAR})>0
				</when>
				<when test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchField) and @org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchValue) and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
					and exfield_id = #{simpleCondition.searchField,jdbcType=VARCHAR}
					and INSTR(EXPROD_NAME, #{simpleCondition.searchWord,jdbcType=VARCHAR})>0
				</when>
				<when test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchField) and @org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchValue) and @org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchWord)">
					and exfield_id = #{simpleCondition.searchField,jdbcType=VARCHAR}
				</when>
				<when test="@org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchField)  and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchValue) and @org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchWord)">
					and exjob_id = #{simpleCondition.searchValue,jdbcType=VARCHAR}				
				</when>
				<when test="@org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchField)  and @org.apache.commons.lang3.StringUtils@isBlank(simpleCondition.searchValue) and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
					and INSTR(EXPROD_NAME, #{simpleCondition.searchWord,jdbcType=VARCHAR})>0
				</when> 
				
			<!-- 	<otherwise>
					exfield_id = #{simpleCondition.searchField,jdbcType=VARCHAR}
					OR
					exjob_id = #{simpleCondition.searchValue,jdbcType=VARCHAR}
					OR
					INSTR(EXPROD_NAME, #{simpleCondition.searchWord,jdbcType=VARCHAR})>0
				</otherwise> -->
			</choose>
			</if>
			
			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchType)">
				AND exlprod_id = #{simpleCondition.searchType}		
			</if>
			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchId)">
				and INSTR(mem_id, #{simpleCondition.searchId,jdbcType=VARCHAR})>0	
			</if>
			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.startDate)">
				and exprod_start <![CDATA[>=]]> #{simpleCondition.startDate}	
			</if>
			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.endDate)">
				and exprod_end <![CDATA[<=]]> #{simpleCondition.endDate}
			</if>
			
		</where>
	</sql> 
	<select id="selectTotalRecord" parameterType="PagingVO" resultType="int">
		select count(*)
		from mem_expert_exprod
<!-- 		<include refid="searchFrag"/> -->
		<include refid="mainSearch"/>
	</select>
	 
	<select id="selectExprodList" parameterType="PagingVO" resultType="ExprodVO">
	WITH ORDEREDEVENT AS (
	SELECT
	    exprod_id,
	    to_char(exprod_start,'yyyy-hh-dd') as exprod_start,
	    to_char(exprod_end,'yyyy-hh-dd') as exprod_end,
	    exprod_target,
	    exprod_name,
	    exprod_price,
	    exprod_way,
	    exprod_time,
	    mem_id,
	    mem_name,
	    exprod_aproval,
	    exfield_id,
	    expert_field,
	    exjob_id,
    	EXLPROD_ID,
    	exprod_pr	    
	FROM
	    mem_expert_exprod
<!--     <include refid="searchFrag"/> -->
    <include refid="mainSearch"/>
    ORDER BY exprod_id DESC
    )
	SELECT A.*
	FROM (
		SELECT ROWNUM AS RNUM, ORDEREDEVENT.*
		FROM ORDEREDEVENT
	)A
	WHERE RNUM BETWEEN #{startRow}	AND #{endRow}
	</select>
	
	
	<insert id="InsertExprod" parameterType="kr.or.ddit.expert.vo.ExprodVO">
	<selectKey order="BEFORE" resultType="string" keyProperty="exprodId">
		SELECT 'EXP' || LPAD(COMPANY_SEQ.NEXTVAL,6,0) FROM DUAL
	</selectKey>
	INSERT INTO exprod (
	    exprod_id,
	    exprod_start,
	    exprod_end,
	    exprod_target,
	    exprod_name,
	    exprod_price,
	    exprod_way,  
	    exprod_time,
	    exprod_detail,
	    mem_id,
	    exprod_aproval,
	    exlprod_id
	) VALUES (
	 #{exprodId,jdbcType=VARCHAR}
	, #{exprodStart,jdbcType=DATE}
	, #{exprodEnd,jdbcType=DATE}
	, #{exprodTarget,jdbcType=VARCHAR}
	, #{exprodName,jdbcType=VARCHAR}
	, #{exprodPrice,jdbcType=NUMERIC}
	, #{exprodWay,jdbcType=VARCHAR}
	, #{exprodTime,jdbcType=VARCHAR}
	, #{exprodDetail,jdbcType=VARCHAR}
	, #{memId,jdbcType=VARCHAR}
	, 'N'
	, #{exlprodId,jdbcType=VARCHAR}
	)   		
	</insert>
	
	<select id="selectExprod" parameterType="String" resultType="kr.or.ddit.expert.vo.ExprodVO">
	SELECT
    exprod_id,
    exprod_start,
    exprod_end,
    exprod_target,
    exprod_name,
    exprod_price,
    exprod_way,
    exprod_time,
    exprod_detail,
    mem_id,
    exprod_aproval,
    exlprod_id
	FROM
	    exprod
	where exprod_id = #{exprodId,jdbcType=VARCHAR}
		
	</select>
	
	<update id="updateExprod" parameterType="kr.or.ddit.expert.vo.ExprodVO">
	UPDATE exprod
	SET
	    exprod_start= #{exprodStart,jdbcType=DATE},
	    exprod_end= #{exprodEnd,jdbcType=DATE},
	    exprod_target= #{exprodTarget,jdbcType=VARCHAR},
	    exprod_name= #{exprodName,jdbcType=VARCHAR},
	    exprod_price= #{exprodPrice,jdbcType=NUMERIC},
	    exprod_way= #{exprodWay,jdbcType=VARCHAR},
	    exprod_time= #{exprodTime,jdbcType=VARCHAR},
	    exlprod_id= #{exlprodId,jdbcType=VARCHAR},
	    exprod_aproval = 'N',
	    exprod_detail =  #{exprodDetail,jdbcType=CLOB}
	where 
		exprod_id = #{exprodId,jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteExprod" parameterType="String">
	DELETE FROM EXPROD
	WHERE exprod_id = #{exprodId,jdbcType=VARCHAR}
	</delete>
	
	<update id="updateExprodName" parameterType="ExprodVO">
	UPDATE exprod
	SET
	    exprod_name= #{exprodName,jdbcType=VARCHAR}
	where 
		exprod_id = #{exprodId,jdbcType=VARCHAR}
	</update>
	<select id="selectExreviewList" parameterType="String" resultType="kr.or.ddit.expert.vo.ExreviewVO">
	SELECT
	    exreview_id,
	    exreview_name,
	    exreview_writer,
	    exreview_pass,
	    exreview_hit,
	    review_cartid,
	    exreview_date,
	    exreview_score,
	    exreview_content
	FROM
	    mem_excart_exprod_exreview
	WHERE EXPROD_ID = #{exprodId,jdbcType=VARCHAR}
	</select>
	
	
	
	<!-- ==================================== 시스템 관리 부분 ==================================== -->
	<!-- 상품 신청 목록 -->
	<select id="selectAppliProdList" parameterType="PagingVO" resultType="ExprodVO">
		WITH ORDEREDEVENT AS (    
		    SELECT EXPROD_ID
		           , MEM_ID
		           , MEM_NAME
		           , MEM_AUTH_CD
		           , EXPERT_APPROVAL
		           , EXPERT_APPROVAL_DATE
		           , EXPERT_FIELD
		           , EXPROD_NAME
		           , EXPROD_APROVAL
		           , EXLPROD_ID
		      FROM MEM_EXPERT_EXPROD 
		     WHERE EXPROD_APROVAL = 'N'
		     ORDER BY EXPROD_ID 
		    )
		SELECT A.*
		FROM (
		    SELECT ROWNUM AS RNUM, ORDEREDEVENT.*
		    FROM ORDEREDEVENT
		)A
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 상품 승인 -->
	<update id="updateAppliProd" parameterType="ExprodVO">
		UPDATE EXPROD
	   	SET EXPROD_APROVAL = 'Y'
	 	WHERE EXPROD_ID = #{exprodId}
	</update>
	
</mapper>