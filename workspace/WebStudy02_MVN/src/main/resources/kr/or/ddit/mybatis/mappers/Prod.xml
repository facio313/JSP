<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">

	<sql id="searchFrag">
		<where>
			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
				<choose>
					<when test="simpleCondition.searchType eq 'lprodNm'">
						INSTR(PROD_LGU, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'buyerName'">
						INSTR(BUYER_NAME, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'prodName'">
						INSTR(PROD_NAME, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'prodName'">
						INSTR(PROD_LGU, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(BUYER_NAME, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'prodName'">
						INSTR(BUYER_NAME, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(PROD_NAME, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'prodName'">
						INSTR(PROD_LGU, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(PROD_NAME, #{simpleCondition.searchWord}) > 0
					</when>
					<otherwise>
						INSTR(PROD_LGU, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(BUYER_NAME, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(PROD_NAME, #{simpleCondition.searchWord}) > 0
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>

	<select id="selectTotalRecord" resultType="int" parameterType="PagingVO">
		SELECT COUNT(*)
		FROM PRODVIEW
		<include refid="searchFrag"/>
	</select>
	
	<select id="selectProdList" resultType="ProdVO" parameterType="PagingVO">
		SELECT B.*
		FROM (
		    SELECT A.*, ROWNUM RNUM
		    FROM (
		        WITH CARTVIEW AS (
		            SELECT CART_PROD, SUM(CART_QTY) CNT
		            FROM CART INNER JOIN PROD ON (CART_PROD = PROD_ID)
		            GROUP BY CART_PROD
		            ORDER BY 1 ASC
		        )
		        SELECT PROD_ID, PROD_LGU, PROD_NAME, BUYER_NAME, PROD_PRICE, PROD_SALE, CNT
		        FROM   PRODVIEW LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
		        <include refid="searchFrag"/>
		        ORDER BY 1 ASC
		    ) A
		) B
		 <![CDATA[
		 WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		 ]]>
	</select>

	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		<collection property="memberSet" ofType="MemberVO" autoMapping="true">
			<id property="memId" column="MEM_ID"/>
		</collection>
	</resultMap>

	<select id="selectProd" parameterType="string" resultMap="prodMap">
		WITH CARTVIEW AS (
		    SELECT CART_PROD, MEM_ID, MEM_NAME, MEM_HP, MEM_MAIL, MEM_MILEAGE
		    FROM CART INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
		)
		SELECT
		    PROD_ID,    PROD_NAME,    PROD_LGU,
		    PROD_BUYER,    PROD_COST,    PROD_PRICE,
		    PROD_SALE,    PROD_OUTLINE,    PROD_DETAIL,
		    PROD_IMG,    PROD_TOTALSTOCK,    PROD_INSDATE,
		    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,
		    PROD_DELIVERY,    PROD_UNIT,    PROD_QTYIN,
		    PROD_QTYSALE,    PROD_MILEAGE
		    , LPROD_NM
		    , BUYER_NAME, BUYER_ADD1, BUYER_CHARGER
		    , CARTVIEW.*
		FROM   PRODVIEW LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prodId}
	</select>
</mapper>