<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<!-- HandlerMapping, HandlerAdapter, ViewResolver, Validator 등의 MVC 프로그래밍 모델에서 사용될 전략 객체들이 자동 등록됨 --> 
	<!-- 27개의 bean들이 자동으로 등록됨 -->
	<mvc:annotation-driven validator="validator"></mvc:annotation-driven>
	
	<!-- 로케일에 따른 언어별 메시지 처리를 위한 전략 객체 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basenames="kr.or.ddit.msgs.errorMessage, kr.or.ddit.msgs.message"
	/> <!-- HandlerAdapter가 "messageSource"라는 이름으로 Inject하고 있다.-->
	
	<!-- 자동이 마음에 안 들면 수동으로 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" 
		p:validationMessageSource-ref="messageSource"
	/>  <!-- 이 객체가 아니라 이 factory 객체로 만들어진 객체가 등록되는 것 -->
	
	
	<!-- 자동이 마음에 안 들면 수동으로 -->
	<bean id="IRVR" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/views/"
		p:suffix=".jsp"
	/> <!-- p:order="2"가 생략됨 -->
	
	<bean id="BNVR" class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="1"
	/>
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	<!-- Controller layer를 bean으로 등록하기 위한 필터링 설정 -->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- LocaleChangeInterceptor가 변경한 로케일 정보를 저장하기 위해 사용하는 전략객체 -->	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		p:cookieName="localeCookie"
		p:cookiePath="/"
		p:cookieMaxAge="#{60*60*24*5}"
	/> <!-- 누군가가 그 아이디로 쓰고 있기 때문에 고정(누군가는 밑에 인터셉터) -->
	
	<!-- HandlerInterceptor : 스프링 컨테이너 밖에 존재하는 웹 필터의 역할을 대신하는 객체 -->
	
	<mvc:interceptors> <!-- filter-chains의 역할 but 컨테이너 안에 있음 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!-- language 이름의 요청 파라미터를 기준으로 현재 로케일을 변경하기 위한 인터셉터 -->
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
				p:paramName="language"
			/>
		</mvc:interceptor>
	</mvc:interceptors>
	
<!-- 	<mvc:default-servlet-handler/> -->

	<!-- 정적 자원이 일괄 관리되는 경우 활용 / 분산되면 이거 사용 못함.. defaultServlet 사용해야 함 -->
	<mvc:resources location="/resources/" mapping="/resources/**" cache-period="0"/> <!-- 핸들러이기 때무넹 얘는 컨트롤러라는 것 / /** 이 아래 모든 뎁스구조 요청 -->
</beans>
